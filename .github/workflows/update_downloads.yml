name: Update PyPI Downloads

permissions:
  contents: read
  pull-requests: write


on:
  # Remove the "#" to get the cronjob running at 01:15 UTC
  # doc:  https://docs.github.com/en/actions/use-cases-and-examples/project-management/scheduling-issue-creation
  # doc:  https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#schedule
  # https://crontab.guru/
  #schedule:
  #  - cron: '15 3 * * *'     # 03:15 UTC, see doc link above
  workflow_dispatch:        # Allow manual runs

jobs:
  update:
    runs-on: ubuntu-latest

    permissions:
      contents: write  # Required to push changes to the repository

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log current UTC time
        run: |
          echo Time of workflow run in UTC:
          date -u
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pypistats

      - name: Run download tracker
        run: python track_downloads.py


      # This step checks if any file other than `downloads.json` (and possibly `README.md`) have been modified.
      #
      # If you also want to update README.md, use this below:
      #    if git diff --name-only | grep -vE "^(downloads\.json|README\.md)$"; then
      - name: Verify changes
        run: |
          if git diff --name-only | grep -v "downloads.json"; then
            echo "Unauthorized file modification detected!"
            exit 1
          fi   
          
      - name: Commit and push changes
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add downloads.json
          git commit -m 'chore: update total downloads' || echo "No changes to commit"
          git push
